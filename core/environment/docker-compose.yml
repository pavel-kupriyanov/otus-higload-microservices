version: '3.3'

services:
  master:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    container_name: mysql-master
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: otus
      MYSQL_USER: otus
      MYSQL_PASSWORD: otus
      MYSQL_ROOT_PASSWORD: 'otus'
    ports:
      - 3306:3306
    volumes:
      - mysql-master-db:/var/lib/mysql

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181

  kafka:
    build:
      context: kafka
      dockerfile: Dockerfile
    container_name: kafka
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: "PLAIN"
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
    depends_on:
      - zookeeper
    volumes:
      - kafka-data9:/kafka
    ports:
      - 29092:29092
      - 9092:9092

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms128M -Xmx128M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
    ports:
      - 9000:9000

  redis:
    image: bitnami/redis
    container_name: redis
    environment:
      ALLOW_EMPTY_PASSWORD: 'true'
    ports:
      - 6379:6379

  rabbitmq:
    build:
      context: rabbitmq
      dockerfile: Dockerfile
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: '!SecretCookie!'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq


volumes:
  mysql-master-db:
  mysql-shard0:
  mysql-shard1:
  kafka-data9:
  rabbitmq-data:
  rabbitmq-logs:


